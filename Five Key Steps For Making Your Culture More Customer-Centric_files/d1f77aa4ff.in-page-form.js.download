!function(n){function t(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return n[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var e={};t.m=n,t.c=e,t.d=function(n,e,o){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:o})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},t.p="scripts/",t(t.s=210)}({100:function(n,t,e){angular.module("inPage",["baseForm"]).value("inPageWidget",{}).directive("script",e(101)).factory("utils",e(102)).factory("payloadHandler",e(103)).factory("inPageFormHandler",e(104)).directive("inPageForm",e(105)),angular.module("inPageIframe",[]).run(e(106)).directive("img",e(107)).directive("inPageFormContainer",e(108)),angular.module("ubWidget",["inPageIframe","inPage"]),e(109)},101:function(n,t){function e(n,t){return{restrict:"E",compile:function(e,o){if("campaign/form"===o.type)try{var r=t(e[0].text)();angular.isObject(r)&&angular.copy(r,n)}catch(n){throw new Error("Cannot parse element data")}}}}e.$inject=["inPageWidget","$parse"],n.exports=e},102:function(n,t){function e(n){var t={};return t.getBrowserData=function(){for(var t=n.navigator,e={},o=["userAgent","language","languages","cookieEnabled","doNotTrack"],r=0;r<o.length;r++){var a=o[r];a in t&&(e[a]=t[a])}return e},t.getScreenData=function(){for(var t=n.screen,e={},o=["availTop","availLeft","availWidth","availHeight","colorDepth","height","left","orientation","pixelDepth","top","width"],r=0;r<o.length;r++){var a=o[r];a in t&&(e[a]=t[a])}return e},t.postMessageToParent=function(t,e){var o=JSON.stringify({type:t,payload:e});n.parent.postMessage(o,"*")},t}e.$inject=["$window"],n.exports=e},103:function(n,t){function e(n){return{send:function(t,e,o){t.v+=1,o&&(t.done=!0),e&&n.post(e,t).then(function(n){angular.extend(t,n)},function(){})}}}e.$inject=["corsHttp"],n.exports=e},104:function(n,t){function e(n,t,e){function o(){r={},a={},i=n.form,l=[],c={},s={data:r,custom:a,times:c,browser:t.getBrowserData(),screen:t.getScreenData(),pages:l,version:n.version,widget_id:n.id},u={id:null,sig:null,type:"in-page",subtype:"form",v:0,data:s,done:!1}}var r,a,i,l,c,s,u,d;o();var g={getDataObject:function(){return r},reset:function(){o()},getPageIndex:function(n){if(!n)return-1;var t=n.name||n;if(i)for(var e=0;e<i.pages.length;e++)if(i.pages[e].name===t)return e;return-1},getPageByName:function(n){var t=this.getPageIndex(n);return t>=0?i.pages[t]:null},getNextPage:function(n){if(!n)return i.pages[0];var t=this.getPageIndex(n);return t>=0?i.pages[t+1]||null:null},getPageCount:function(){return i?i.pages.length:0},registerTiming:function(n,t){var e=n.name||n;c[e]=t},pageSwitched:function(n,o){l.push(o.name),"end"===n.type?(l.push(n.name),s.finished=!0,e.send(u,d,!0),t.postMessageToParent("success",u)):(e.send(u,d),t.postMessageToParent("page-switch",u))}};return{getHandler:function(){return g},setCustomData:function(n){angular.extend(a,n)},getCustomData:function(){return a},setFormData:function(n){angular.extend(r,n)},getFormData:function(){return r},setAction:function(n){d=n},getAction:function(){return d},updateFeedbackData:function(n){var t=["referrer","timing","url","canonical_url"];angular.forEach(t,function(t){t in n&&(s[t]=n[t])})},getFeedbackData:function(){return s}}}e.$inject=["inPageWidget","utils","payloadHandler"],n.exports=e},105:function(n,t){function e(n){return{restrict:"EA",scope:!0,controller:"usabillaFormCtrl",require:"inPageForm",link:function(t,e,o,r){var a=o.ubAction;a&&n.setAction(a),r.registerForm(n.getHandler()),r.reset(),r.start();var i=t.$on("$$message.init",function(e,o){t.$apply(function(){var t=o.data||{};t.custom&&angular.isObject(t.custom)&&n.setCustomData(t.custom),t.data&&n.setFormData(t.data),n.updateFeedbackData(t),i()})})}}}e.$inject=["inPageFormHandler"],n.exports=e},106:function(n,t){function e(n,t){angular.element(t).bind("message",function(t){var e=angular.fromJson(t.data);angular.isObject(e)&&e.type&&n.$broadcast("$$message."+e.type,e)})}e.$inject=["$rootScope","$window"],n.exports=e},107:function(n,t){function e(){return{restrict:"E",link:function(n,t){t.on("load",function(){n.$digest()})}}}n.exports=e},108:function(n,t){function e(){return{restrict:"A",templateUrl:"frontend/views/inPage/form.html",controller:["$scope","$window","$element","$timeout","$attrs","$interval","StateService",function(n,t,e,o,r,a,i){function l(){var n=e[0].offsetHeight;if(e[0].getBoundingClientRect){var t=e[0].getBoundingClientRect();t.bottom&&(n=Math.max(n,Math.round(t.bottom)))}return n}function c(){var n=l();n!==u&&g.resize(n)}function s(){angular.isDefined(d)||(d=a(c,100))}var u,d,g=this;n.ubAction=r.ubAction||null,r.$observe("allowHtml",function(n){i.allowHtml="true"===n});var p={send:function(n,e){var o={type:n};angular.extend(o,e||{}),t.parent.postMessage(JSON.stringify(o),"*")},resize:function(n){this.send("resize",{height:n}),u=n}};angular.extend(g,p),g.cancelInterval=function(){angular.isDefined(d)&&(a.cancel(d),d=void 0)},n.$watch(l,s),n.$on("cancelHeightInterval",function(){g.cancelInterval()}),n.$on("$$message.frameResized",function(){n.$apply(g.cancelInterval)}),n.$on("destroy",function(){g.cancelInterval()}),n.$on("linkLoaded",function(){c()}),angular.element(t).on("load",function(){n.$digest()})}]}}n.exports=e},109:function(n,t){angular.module("inPageIframe").run(["$templateCache",function(n){n.put("frontend/views/inPage/form.html",'<div id="logo"></div>\n<form\n    in-page-form\n    name="form"\n    id="form"\n    ng-submit="submit()"\n    ub-action="{{ubAction}}"\n    ng-class="[\'type-\' + currentPage.type, \'page-\' + pageNumber]"\n>\n    <div ng-include="\'frontend/views/form/ui/progress-bar.html\'" ng-if="campaign.data.progressBar.active"></div>\n    <div ng-repeat="control in currentPage.fields" ub-field control="control" data="data" state="state" on-auto-submit="autoSubmitForm(control)" class="control-container control-{{control.type}}"></div>\n</form>\n'),n.put("frontend/views/inPage/form.html",'<div id="logo"></div>\n<form\n    in-page-form\n    name="form"\n    id="form"\n    ng-submit="submit()"\n    ub-action="{{ubAction}}"\n    ng-class="[\'type-\' + currentPage.type, \'page-\' + pageNumber]"\n>\n    <div ng-include="\'frontend/views/form/ui/progress-bar.html\'" ng-if="campaign.data.progressBar.active"></div>\n    <div ng-repeat="control in currentPage.fields" ub-field control="control" data="data" state="state" on-auto-submit="autoSubmitForm(control)" class="control-container control-{{control.type}}"></div>\n</form>\n')}])},15:function(n,t){function e(){var n=document.createElement("input");return n.setAttribute("type","range"),"range"===n.type}n.exports=e},18:function(n,t,e){angular.module("baseForm",[]).filter("makeRange",e(19)).filter("trustHtml",e(9)).factory("StateService",e(8)).controller("usabillaFormCtrl",e(20)).directive("ubField",e(21)).directive("ubCheckboxList",e(22)).directive("ubCenter",e(23)).directive("ubMax",e(24)).directive("ubRangeSlider",e(25)).directive("link",e(26)).factory("corsHttp",e(27)),e(28)},19:function(n,t){function e(){return function(n){var t,e;switch(n.length){case 1:t=0,e=parseInt(n[0],10)-1;break;case 2:t=parseInt(n[0],10),e=parseInt(n[1],10);break;default:return n}for(var o=[],r=t>e?-1:1,a=t;a!==e+r;a+=r)o.push(a);return o}}n.exports=e},20:function(n,t){function e(n,t,e,r){var a=this;a.formHandler=null,a.startTime=o();var i=t["form-name"]||"form";n.currentPage=null,n.state=e,n.state.submitted=!1,n.data={},n.progressBar={},this.registerForm=function(t){if(!t)throw new Error("No form handler");this.reset(),a.formHandler=t,n.data=a.formHandler.getDataObject()},this.reset=function(){a.formHandler&&a.formHandler.reset&&a.formHandler.reset(),a.startTime=o(),n.currentPage=null,n.state.submitted=!1,n.data=a.formHandler?a.formHandler.getDataObject():{}},this.start=function(t){if(t){var e=a.formHandler.getPageByName(t);e&&(n.currentPage=e)}else n.currentPage=a.formHandler.getNextPage()},a.switchPageHandler=function(t){if(a.formHandler){var e=a.formHandler.getPageByName(t);e&&(n.currentPage=e)}},n.$on("$$switchPage",function(n,t){a.switchPageHandler(t)}),a.updateProgressBar=function(t){if(t&&a.formHandler){var e={current:0,pages:a.formHandler.getPageCount()};if(null!==t){var o=a.formHandler.getPageIndex(t)+1;e.current=5*Math.round(o/e.pages*100/5)}angular.copy(e,n.progressBar)}},n.$watch("currentPage",function(t){n.$emit("resize"),a.updateProgressBar(t),a.formHandler&&t&&(n.pageNumber=a.formHandler.getPageIndex(t)+1),a.scrollTopWindow()}),a.scrollTopWindow=function(){r.scrollTo(0,0)},n.autoSubmitForm=function(t){var e=n.currentPage;if(e.autoSubmit){for(var o,r=e.fields.length,a=-1,i=r-1;i>=0;i--)if(o=e.fields[i],o.autoSubmit&&o.interactive){a=i;break}if(a!==r-1)for(var l=a+1;l<r;l++)if(e.fields[l].interactive)return;o===t&&this.submit()}},this.submit=n.submit=function(){var t,e,r,l=n.currentPage,c=null,s=l.jumpRules||[],u=l.jump||null,d=Math.round(o()-a.startTime);if(n.state.submitted=!0,n[i]&&n[i].$invalid)return void n.$emit("resize");n.state.submitted=!1,a.formHandler.registerTiming(l,d);n:for(t=0;t<s.length;t++)for(r=n.data[s[t].control],s[t].subcontrol&&r&&(r=r[s[t].subcontrol]),angular.isArray(r)||(r=[r]),e=0;e<r.length;e++)if(-1!==s[t].value.indexOf(r[e])){u=s[t].jump;break n}null!==u?null!==(c=a.formHandler.getPageByName(u))&&(n.currentPage=c):n.currentPage=a.formHandler.getNextPage(n.currentPage),a.startTime=o(),a.formHandler.pageSwitched(n.currentPage,l)}}e.$inject=["$scope","$attrs","StateService","$window"];var o;o=window.performance&&window.performance.now?window.performance.now.bind(window.performance):Date.now&&Date.now.bind?Date.now.bind(Date):function(){return+new Date},n.exports=e},21:function(n,t){function e(){return{restrict:"AE",scope:{control:"=",data:"=",autoSubmit:"&onAutoSubmit"},template:'<div ng-if="!hide" ng-include="template"></div>',controller:["$scope","$filter","StateService",function(n,t,e){var o,r,a={matrixRating:{},checkbox:[]},i=function(n){return angular.equals(o,n)};n.control.options&&(n.optionsCopy=angular.copy(n.control.options),angular.forEach(n.optionsCopy,function(t,e){t.randomToken=n.control.random?Math.floor(11*Math.random()):e})),n.template="frontend/views/form/control/"+n.control.type+".html",n.hide=!1,n.required=!1,n.isTouch="ontouchstart"in window,n.state=e,n.$watch("control.required && !hide",function(t){n.required=t}),n.validate=function(){n.state.submitted=!0,n.$emit("resize")},n.showHideRuleHandler=function(t){t&&t.control&&t.value&&t.action&&(n.hide="show"===t.action,n.$watch("data[control.showHideRule.control]",function(e){n.executeShowHideRule(t,e)},!0),o=angular.copy(a[n.control.type]))},n.executeShowHideRule=function(t,e){var a=e;t.subcontrol&&e&&(a=e[t.subcontrol]);var l=[a];angular.isArray(a)&&(l=a),n.hide="show"===t.action;for(var c=0;c<l.length;c++)if(-1!==t.value.indexOf(l[c])){n.hide="show"!==t.action;break}var s=n.data[n.control.name];n.hide&&!i(s)&&(r=angular.copy(s),n.data[n.control.name]=angular.copy(o)),!n.hide&&r&&(n.data[n.control.name]=angular.copy(r))},n.$watch("control.showHideRule",function(t){n.showHideRuleHandler(t)}),n.noOptionSelected=function(){return n.control.empty||!n.data[n.control.name]},n.shouldReverse=function(){var t=n.control.options;return!angular.isUndefined(t)&&t[0].value>t[1].value},n.getRange=function(){var e=n.control.scale,o=n.shouldReverse()?[e,1]:[1,e];return t("makeRange")(o)}}]}}n.exports=e},210:function(n,t,e){e(18),e(100)},22:function(n,t){function e(n){return{restrict:"A",require:"ngModel",templateUrl:"frontend/views/form/control/checkbox-list.html",link:function(t,e,o,r){t.checks={};var a=n(o.ngModel),i=n(o.ubRequired),l=n(o.min),c=n(o.max);a(t)&&a(t).join||a.assign(t,[]);var s=function(){var n=a(t),e=i(t),o=l(t),s=c(t);r.$setValidity("required",!(e&&0===n.length)),r.$setValidity("min",!(o&&n.length<o)),r.$setValidity("max",!(s&&n.length>s))};t.$watch("required",s),t.$watch(o.ngModel,function(n){angular.forEach(t.control.options,function(e){t.checks[e.value]=n&&n.join&&-1!==n.indexOf(e.value)}),s()},!0),t.$watch("checks",function(n){var e=a(t);e&&(angular.forEach(n,function(n,t){n&&-1===e.indexOf(t)&&e.push(t),n||-1===e.indexOf(t)||e.splice(e.indexOf(t),1)}),s())},!0)}}}e.$inject=["$parse"],n.exports=e},23:function(n,t){function e(){return{restrict:"A",scope:!0,link:function(n,t){n.$watch(function(){var n=t[0].offsetWidth;t[0].style.marginLeft=n/2*-1+"px",t[0].style.width=n+"px"})}}}n.exports=e},24:function(n,t){function e(){return{restrict:"A",link:function(n,t,e){var o=t[0];"max"in o?o.max=e.ubMax:o.setAttribute("max",e.ubMax)}}}n.exports=e},25:function(n,t){function e(){return{scope:!0,restrict:"A",require:"ngModel",link:function(n,t,e,o){function r(n){return o.$touched?n.toString():void(o.$touched=!0)}o.$parsers.push(r)}}}n.exports=e},26:function(n,t){function e(n){return{scope:!0,restrict:"E",link:function(t,e,o){"stylesheet"===o.rel&&e.ready(function(){n.$broadcast("linkLoaded")})}}}e.$inject=["$rootScope"],n.exports=e},27:function(n,t){function e(n,t,e){return{post:function(o,r){if(t.XDomainRequest){var a=new t.XDomainRequest,i=e.defer();return a.onload=function(){var n=angular.fromJson(a.responseText);n?i.resolve(n):i.reject(a.responseText)},a.onerror=function(){i.reject("http error")},a.ontimeout=function(){i.reject("http timeout")},a.timeout=25e3,a.onprogress=function(){},a.open("POST",o),a.send(angular.toJson(r)),i.promise}return n({method:"POST",url:o,data:angular.toJson(r)}).then(function(n){return n.data})}}}e.$inject=["$http","$window","$q"],n.exports=e},28:function(n,t){angular.module("baseForm").run(["$templateCache",function(n){n.put("frontend/views/form/control/checkbox-list.html",'<ul ng-class="{inline: control.inline}">\n    <li ng-repeat="option in optionsCopy | orderBy: \'randomToken\'">\n        <label>\n            <input type="checkbox" ng-model="checks[option.value]" value="{{option.value}}"> {{ option.title }}\n        </label>\n    </li>\n</ul>\n'),n.put("frontend/views/form/control/checkbox.html",'<div ng-form="form">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <div ub-checkbox-list ng-model="data[control.name]" ub-required="required" name="checkbox" min="{{control.min}}" max="{{control.max}}"></div>\n    <p class="error" ng-if="form.checkbox.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/choice.html",'<div ng-form="form" ng-init="data[control.name] = data[control.name]||control.default||data[control.name]">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <select name="choice" ng-required="required" ng-model="data[control.name]" ng-options="option.value as option.title for option in (optionsCopy | orderBy: \'randomToken\')" autocomplete="off">\n        <option ng-show="noOptionSelected()" value="" ng-selected="noOptionSelected()">{{control.empty}}</option>\n    </select>\n    <p class="error" ng-if="form.choice.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/comment.html",'<div ng-form="form" ng-init="data[control.name] = data[control.name]||control.default||data[control.name]">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <textarea name="text" ng-required="required" ng-model="data[control.name]" placeholder="{{ control.placeholder }}"></textarea>\n    <p class="error" ng-if="form.text.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/continue.html",'<div class="button">\n    <button type="submit" ng-click="validate()" id="button" class="btn">\n        {{ control.title }}\n    </button>\n    <span ng-if="control.cancel && $root.showClose !== false">&nbsp;\n        <a ng-click=" $root.$emit(\'form:closeSurvey\'); " style="display: inline-block;">{{ control.cancel }}</a>\n    </span>\n</div>\n'),n.put("frontend/views/form/control/email.html",'<div ng-form="form">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <input class="textinput" type="email" name="email" ng-required="required" ng-model="data[control.name]"\n           placeholder="{{ control.placeholder }}" ng-pattern="/.+@.+\\..+/i" />\n    <p class="error" ng-if="form.email.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/header.html","<h2>{{control.text}}</h2>"),n.put("frontend/views/form/control/matrixRating.html",'<div ng-form="form" class="matrix-rating-container" ng-class="{\'slider\': control.mode == \'slider\'}" ng-init="data[control.name]={}">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n\n    <div ng-repeat="option in control.options">\n        <div class="matrix-rating-title">{{ option.title }}</div>\n\n        <div class="nps-control" ng-if="control.mode == \'slider\' && state.supportsRange" style="padding: 0 2px;">\n            <input type="range" ng-model="data[control.name][option.value]" ub-range-slider min="1" ub-max="{{control.scale}}" ng-required="required" ng-if="control.textPositioning == \'below\'"/>\n            <div>\n                <span class="low" ng-if="control.low">{{control.low}}</span>\n                <span class="middle"></span>\n                <span class="high" ng-if="control.high">{{control.high}}</span>\n            </div>\n            <input type="range" ng-model="data[control.name][option.value]" ub-range-slider min="1" ub-max="{{control.scale}}" ng-required="required" ng-if="control.textPositioning != \'below\'"/>\n            <span class="nps-display">{{data[control.name][option.value]}}</span>\n        </div>\n\n        <ul class="inline text-{{control.textPositioning}}" ng-if="control.mode == \'radio\' || !state.supportsRange" ng-class="{abs: control.textPositioning != \'beforeafter\'}">\n            <li ng-repeat="optionIndex in [1, control.scale] | makeRange" ng-class="{\'text-container\': ($first || $last)}">\n                <label>\n                    <span class="text low" ng-if="control.low && $first">{{control.low}}</span>\n                    <input type="radio" ng-required="required" name="radio-{{control.name}}-{{option.value}}" ng-model="data[control.name][option.value]" value="{{optionIndex}}"> {{ optionIndex }}\n                    <span class="text high" ng-if="control.high && $last">{{control.high}}</span>\n                </label>\n            </li>\n        </ul>\n\n        <p class="error" ng-if="form.$invalid && state.submitted">{{control.validationText}}</p>\n    </div>\n</div>\n'),n.put("frontend/views/form/control/mood.html",'<div ng-form="form" ng-init="showLabel = true; selectedIndex = 0; isHover = false;">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    \x3c!-- mood rating on desktop --\x3e\n    <ul class="inline mood" ng-mouseover="showLabel = false" ng-mouseout="showLabel = true" ng-class="{showLabel: showLabel}" ng-if="!isTouch && control.mode != \'star\'">\n        <li ng-repeat="option in control.options" class="mood_{{option.value}} hasHover" ng-class="{active: data[control.name] == option.value}">\n            <label>\n                <input type="radio" ng-required="required" name="{{control.name}}" ng-model="data[control.name]" value="{{option.value}}" ng-change="autoSubmit(control)">\n                <span ub-center>{{ option.title }}</span>\n            </label>\n        </li>\n    </ul>\n    \x3c!-- mood rating on touch device --\x3e\n    <ul class="inline mood" ng-class="{showLabel: showLabel}" ng-if="isTouch && control.mode != \'star\'">\n        <li ng-repeat="option in control.options" class="mood_{{option.value}}" ng-class="{active: data[control.name] == option.value}">\n            <label>\n                <input type="radio" ng-required="required" name="{{control.name}}" ng-model="data[control.name]" value="{{option.value}}" ng-change="autoSubmit(control)">\n                <span ub-center>{{ option.title }}</span>\n            </label>\n        </li>\n    </ul>\n\n    \x3c!-- star rating --\x3e\n    <ul\n        class="inline mood star"\n        ng-mouseover="isHover = true"\n        ng-mouseout="isHover = false"\n        ng-if="control.mode == \'star\'">\n        <li\n            ng-repeat="option in control.options"\n            class="mood_{{option.value}}"\n            ng-class="{active: ((data[control.name]>=option.value && !isHover) || ($parent.selectedIndex >= option.value && isHover))}"\n            ng-mouseover="$parent.selectedIndex = option.value"\n            ng-mouseout="$parent.selectedIndex = 0">\n            <label>\n                <input type="radio" ng-required="required" name="{{control.name}}" ng-model="data[control.name]" value="{{option.value}}" ng-change="autoSubmit(control)">\n            </label>\n        </li>\n    </ul>\n\n    <p class="error" ng-if="form.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/nps.html",'<div ng-form="form">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <div class="nps-control" ng-if="control.mode != \'radio\' && state.supportsRange" style="padding: 0 2px;">\n        <span ng-show="control.colorLegend">\n            <span class="nps-slider-border nps-red"></span>\n            <span class="nps-slider-border nps-yellow"></span>\n            <span class="nps-slider-border nps-green"></span>\n        </span>\n        <input name="nps" type="range" ng-model="data[control.name]" ub-range-slider min="0" max="10" ng-required="required"/>\n        <div>\n            <span class="low" ng-if="control.low.length">{{control.low}}</span>\n            <span class="middle"></span>\n            <span class="high" ng-if="control.high.length">{{control.high}}</span>\n        </div>\n        <span class="nps-display">{{data.nps}}</span>\n    </div>\n    <ul class="nps-control-radio" ng-if="control.mode == \'radio\' || !state.supportsRange">\n        <li ng-repeat="option in [0, 10] | makeRange" ng-class="{\'text-container\': ($first || $last)}">\n            <label>\n                <span ng-show="control.colorLegend">\n                    <span ng-if="option < 7" class="nps-border-color nps-red"></span>\n                    <span ng-if="option > 6 && option < 9" class="nps-border-color nps-yellow"> </span>\n                    <span ng-if="option > 8" class="nps-border-color nps-green"></span>\n                </span>\n                {{ option }}\n                <input type="radio" ng-required="required" name="radio-{{control.name}}"\n                       ng-model="data[control.name]" value="{{option}}" ng-change="autoSubmit(control)">\n\n                <div class="text low" ng-if="control.low && $first">{{control.low}}</div>\n                <div class="text high" ng-if="control.high && $last">{{control.high}}</div>\n            </label>\n        </li>\n    </ul>\n    <p class="error" ng-if="form.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/paragraph.html",'<p ng-if="!(control.html && state.allowHtml)" class="nl">{{ control.text || \'&nbsp;\' }}</p>\n<p ng-if="state.allowHtml && control.html" ng-bind-html="control.text | trustHtml"></p>\n'),n.put("frontend/views/form/control/performance.html",'<div ng-form="form">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <label>\n        <input type="radio" ng-required="required" name="performance" ng-model="data[control.name]" value="slow"> {{ control.slow }}\n    </label>\n    <label>\n        <input type="radio" ng-required="required" name="performance" ng-model="data[control.name]" value="normal"> {{ control.normal }}\n    </label>\n    <label>\n        <input type="radio" ng-required="required" name="performance" ng-model="data[control.name]" value="fast"> {{ control.fast }}\n    </label>\n    <p class="error" ng-if="form.performance.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/radio.html",'<div ng-form="form">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <ul ng-class="{inline: control.inline}">\n        <li ng-repeat="option in optionsCopy | orderBy: \'randomToken\'">\n            <label>\n                <input type="radio" ng-required="required" name="radio-{{control.name}}" ng-model="data[control.name]" value="{{option.value}}"> {{ option.title }}\n            </label>\n        </li>\n    </ul>\n    <p class="error" ng-if="state.submitted && form.$invalid">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/rating.html",'<div ng-form="form">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <div class="nps-control" ng-if="control.mode == \'slider\' && state.supportsRange">\n        <input type="range" ng-model="data[control.name]" ub-range-slider min="1" ub-max="{{control.scale}}" ng-required="required" ng-if="control.textPositioning == \'below\'"/>\n        <div>\n            <span class="low" ng-if="control.low">{{control.low}}</span>\n            <span class="middle"></span>\n            <span class="high" ng-if="control.high">{{control.high}}</span>\n        </div>\n        <input type="range" ng-model="data[control.name]" ub-range-slider min="1" ub-max="{{control.scale}}" ng-required="required" ng-if="control.textPositioning != \'below\'"/>\n        <span class="nps-display">{{data[control.name]}}</span>\n    </div>\n\n    <ul class="inline text-{{control.textPositioning || \'below\'}}" ng-if="control.mode == \'radio\' || !state.supportsRange" ng-class="{abs: control.textPositioning != \'beforeafter\'}">\n        <li ng-repeat="option in getRange()" ng-class="{\'text-container\': ($first || $last)}">\n            <label>\n                <span class="text low" ng-if="control.low && $first">{{control.low}}</span>\n                <input type="radio" ng-required="required" name="radio-{{control.name}}" ng-model="data[control.name]" value="{{option}}" ng-change="autoSubmit(control)"> {{ $index + 1 }}\n                <span class="text high" ng-if="control.high && $last">{{control.high}}</span>\n            </label>\n        </li>\n    </ul>\n\n    <p class="error" ng-if="form.$invalid && state.submitted">{{control.validationText}}</p>\n\n</div>\n'),n.put("frontend/views/form/control/text.html",'<div ng-form="form" ng-init="data[control.name] = data[control.name]||control.default||data[control.name]">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <input type="text" class="textinput" name="text" ng-required="required" ng-model="data[control.name]" placeholder="{{ control.placeholder }}" />\n    <p class="error" ng-if="form.text.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/textArea.html",'<div ng-form="form" ng-init="data[control.name] = data[control.name]||control.default||data[control.name]">\n    <h3 ng-if="control.title">{{control.title}}</h3>\n    <textarea name="text" ng-required="required" ng-model="data[control.name]" placeholder="{{ control.placeholder }}"></textarea>\n    <p class="error" ng-if="form.text.$invalid && state.submitted">{{control.validationText}}</p>\n</div>\n'),n.put("frontend/views/form/control/toggle.html",'<div ng-form="form">\n    <h3 ng-if="control.title">{{ control.title }}<span ng-if="control.required"> *</span></h3>\n    <ul class="inline">\n        <li ng-repeat="option in control.options" class="input-toggle">\n            <input\n                type="radio"\n                ng-class="{\'checked\': data[control.name] == option.value}"\n                id="{{ control.name }}-{{ option.value }}-{{ $index }}"\n                name="{{ control.name }}"\n                ng-model="data[control.name]"\n                value="{{ option.value }}"\n                ng-change="autoSubmit(control)"\n                ng-required="control.required"\n            >\n            <label\n                for="{{ control.name }}-{{ option.value }}-{{ $index }}"\n                class="btn"\n                ng-class="{\n                    \'positive\'  : option.value === \'5\',\n                    \'neutral\'   : option.value === \'3\',\n                    \'negative\'  : option.value === \'1\'\n                }"\n            >\n                {{ option.title }}\n            </label>\n        </li>\n    </ul>\n\n    <p class="error" ng-if="form.$invalid && state.submitted">{{ control.validationText }}</p>\n</div>\n'),n.put("frontend/views/form/ui/background-iframe.html",'<div ng-if="iframeActive">\n    <iframe \n        ng-src="{{ iframeUrl }}" \n        class="bkg-iframe" \n        ng-class="{\'bkg-iframe-active\': iframeActive}">\n    </iframe>\n    <div\n        class="bkg-iframe"\n        ng-class="{\'bkg-overlay\': iframeActive}">\n    </div>\n</div>'),n.put("frontend/views/form/ui/progress-bar.html",'<div class="progress-percent" ng-if="campaign.data.progressBar.type == \'percentage\'">{{progressBar.current|number:0}}%</div>\n<div class="progress-percent" ng-if="campaign.data.progressBar.type == \'text\'">{{currentPage.progressbar_text || \'&nbsp;\'}}</div>\n<div class="progress-percent" ng-if="campaign.data.progressBar.type == \'\'">&nbsp;</div>\n<div class="progress">\n\t<span ng-style="{width: progressBar.current + \'%\'}" class="progress-bar"></span>\n</div>\n')}])},8:function(n,t,e){function o(){var n={};return n.allowHtml=!1,n.supportsRange=r(),n}var r=e(15);n.exports=o},9:function(n,t){function e(n){return function(t){return n.trustAsHtml(t)}}e.$inject=["$sce"],n.exports=e}});